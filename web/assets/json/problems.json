{
  "data": [
    {
      "acceptanceRate": 52.4,
      "accepted": 12.9,
      "author": {
        "urlAvatar": "https://avatars.leetcode.com/u/12345",
        "username": "PrimeTimeTran"
      },
      "body": "Given an array of integers and a target value, determine if there are two numbers that add up to the target. You may assume that each input would have exactly one solution, and you may not use the same element twice.",
      "constraints": [],
      "difficulty": "Easy",
      "editorialAuthor": {
        "urlAvatar": "https://avatars.leetcode.com/u/9876",
        "username": "LC_Solutions"
      },
      "editorialBody": "Solutions include a brute force approach, using a hash table for efficient lookups, or sorting with two pointers.",
      "editorialRating": 4.5,
      "editorialVotes": { "1": 5, "2": 4 },
      "frequency": "High",
      "hints": [],
      "isPublished": true,
      "isSubmitted": true,
      "numLC": 1,
      "similar": [{ "difficulty": "Medium", "id": 2, "title": "3 Sum" }],
      "submissions": 24.6,
      "testCases": [
        { "output": [0, 1], "explanation": "", "input": [[2, 7, 11, 15], 9] },
        { "output": [1, 2], "explanation": "", "input": [[3, 2, 4], 6] },
        { "output": [0, 1], "explanation": "", "input": [[3, 3], 6] }
      ],
      "title": "Two Sum",
      "topics": [{ "name": "Array" }, { "name": "Hash Table" }],
      "id": "66367f5e0d552cf0a90e85e9",
      "signature": {
        "parameters": [
          { "type": "List[int]", "name": "nums" },
          { "type": "int", "name": "target" }
        ],
        "returnType": "List[int]"
      }
    },
    {
      "acceptanceRate": 52.4,
      "accepted": 12.9,
      "author": {
        "urlAvatar": "https://avatars.leetcode.com/u/12345",
        "username": "PrimeTimeTran"
      },
      "body": "Given an array of integers and a target value, determine if there are two numbers that add up to the target. You may assume that each input would have exactly one solution, and you may not use the same element twice.",
      "constraints": [],
      "difficulty": "Easy",
      "editorialAuthor": {
        "urlAvatar": "https://avatars.leetcode.com/u/9876",
        "username": "PrimeTimeTran"
      },
      "editorialBody": "Solutions include a brute force approach, using a hash table for efficient lookups, or sorting with two pointers.",
      "editorialRating": 4.5,
      "editorialVotes": { "1": 5, "2": 4 },
      "frequency": "High",
      "hints": [],
      "isPublished": true,
      "isSubmitted": true,
      "numLC": 1,
      "similar": [{ "difficulty": "Medium", "id": 2, "title": "3 Sum" }],
      "submissions": 24.6,
      "testCases": [
        { "output": [0, 1], "explanation": "", "input": [[2, 7, 11, 15], 9] },
        { "output": [1, 2], "explanation": "", "input": [[3, 2, 4], 6] },
        { "output": [0, 1], "explanation": "", "input": [[3, 3], 6] }
      ],
      "title": "Two Sum",
      "topics": [{ "name": "Array" }, { "name": "Hash Table" }],
      "id": "66367f5e0d552cf0a90e85e9",
      "signature": {
        "parameters": [
          { "type": "List[int]", "name": "nums" },
          { "type": "int", "name": "target" }
        ],
        "returnType": "List[int]"
      }
    },
    {
      "acceptanceRate": 59.6,
      "accepted": 18.7,
      "author": {
        "urlAvatar": "https://avatars.leetcode.com/u/12345",
        "username": "PrimeTimeTran"
      },
      "body": "Given an integer array `nums`, return `true` if any value appears at least twice in the array, and return `false` if every element is distinct.",
      "constraints": [],
      "difficulty": "Easy",
      "editorialAuthor": {
        "urlAvatar": "https://avatars.leetcode.com/u/9876",
        "username": "LC_Solutions"
      },
      "editorialBody": "Common solutions include sorting the array and checking neighboring elements, or using a hash set to track seen values for O(n) time complexity.",
      "editorialRating": 4.3,
      "editorialVotes": { "1": 3, "2": 6 },
      "frequency": "High",
      "hints": [],
      "isPublished": true,
      "isSubmitted": true,
      "numLC": 217,
      "similar": [
        { "difficulty": "Easy", "id": 136, "title": "Single Number" }
      ],
      "submissions": 31.4,
      "testCases": [
        { "output": true, "explanation": "", "input": [[1, 2, 3, 1]] },
        { "output": false, "explanation": "", "input": [[1, 2, 3, 4]] },
        {
          "output": true,
          "explanation": "",
          "input": [[1, 1, 1, 3, 3, 4, 3, 2, 4, 2]]
        }
      ],
      "title": "Contains Duplicate",
      "topics": [
        { "name": "Array" },
        { "name": "Hash Table" },
        { "name": "Sorting" }
      ],
      "id": "663680c70d552cf0a90e8612",
      "signature": {
        "parameters": [{ "type": "List[int]", "name": "nums" }],
        "returnType": "bool"
      }
    },
    {
      "acceptanceRate": 63.7,
      "accepted": 19.2,
      "author": {
        "urlAvatar": "https://avatars.leetcode.com/u/12345",
        "username": "ExperiencedCoder"
      },
      "body": "Given two strings `s` and `t`, return `true` if `t` is an anagram of `s`, and `false` otherwise.\n\nAn Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.",
      "constraints": [],
      "difficulty": "Easy",
      "editorialAuthor": {
        "urlAvatar": "https://avatars.leetcode.com/u/9876",
        "username": "LC_Solutions"
      },
      "editorialBody": "Common approaches include sorting both strings and comparing them, or using a hash map or array to count character frequencies for O(n) time and space efficiency.",
      "editorialRating": 4.6,
      "editorialVotes": { "1": 2, "2": 5 },
      "frequency": "High",
      "hints": [],
      "isPublished": true,
      "isSubmitted": true,
      "numLC": 242,
      "similar": [
        { "difficulty": "Easy", "id": 49, "title": "Group Anagrams" }
      ],
      "submissions": 30.1,
      "testCases": [
        { "output": true, "explanation": "", "input": ["anagram", "nagaram"] },
        { "output": false, "explanation": "", "input": ["rat", "car"] },
        { "output": false, "explanation": "", "input": ["a", "ab"] }
      ],
      "title": "Valid Anagram",
      "topics": [
        { "name": "Hash Table" },
        { "name": "String" },
        { "name": "Sorting" }
      ],
      "id": "663681e10d552cf0a90e8637",
      "signature": {
        "parameters": [
          { "type": "str", "name": "s" },
          { "type": "str", "name": "t" }
        ],
        "returnType": "bool"
      }
    },
    {
      "acceptanceRate": 66.4,
      "accepted": 12.8,
      "author": {
        "urlAvatar": "https://avatars.leetcode.com/u/12345",
        "username": "PrimeTimeTran"
      },
      "body": "Given an array of strings `strs`, group the anagrams together. You can return the answer in any order.\n\nAn Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.",
      "constraints": [],
      "difficulty": "Medium",
      "editorialAuthor": {
        "urlAvatar": "https://avatars.leetcode.com/u/9876",
        "username": "LC_Solutions"
      },
      "editorialBody": "A common solution involves using a hash map where the key is a representation of the sorted string (or a character frequency tuple), and the value is a list of anagrams. This results in O(n·k log k) time complexity with sorting, or O(n·k) using character count as the key.",
      "editorialRating": 4.8,
      "editorialVotes": { "1": 3, "2": 8 },
      "frequency": "High",
      "hints": [],
      "isPublished": true,
      "isSubmitted": true,
      "numLC": 49,
      "similar": [
        { "difficulty": "Easy", "id": 242, "title": "Valid Anagram" }
      ],
      "submissions": 19.3,
      "testCases": [
        {
          "output": [["bat"], ["nat", "tan"], ["ate", "eat", "tea"]],
          "explanation": "",
          "input": [["eat", "tea", "tan", "ate", "nat", "bat"]]
        },
        {
          "output": [[""]],
          "explanation": "",
          "input": [[""]]
        },
        {
          "output": [["a"]],
          "explanation": "",
          "input": [["a"]]
        }
      ],
      "title": "Group Anagrams",
      "topics": [
        { "name": "Hash Table" },
        { "name": "String" },
        { "name": "Sorting" }
      ],
      "id": "663683710d552cf0a90e8659",
      "signature": {
        "parameters": [{ "type": "List[str]", "name": "strs" }],
        "returnType": "List[List[str]]"
      }
    }
  ]
}
